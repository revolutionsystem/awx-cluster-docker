---
  - name: Install EPEL repo
    yum:
      name: epel-release
      state: present

  - name: Install packages RabbitMQ Server and Firewalld
    yum:
      name: "{{ packages }}"      
      state: present      
    vars:
      packages:
        - rabbitmq-server
        - firewalld
  
  - name: Start Firewalld Server
    systemd:
      name: firewalld.service
      state: started
      enabled: yes
   
  - name: Update the RabbitMQ cookie
    template:
      src: erlang.cookie.j2
      dest: /var/lib/rabbitmq/.erlang.cookie
      mode: 0600
      owner: rabbitmq
      group: rabbitmq

  - name: Enable rabbitmq management
    command: /sbin/rabbitmq-plugins enable rabbitmq_management
  
  - name: Start Rabbitmq Server
    systemd:
      name: rabbitmq-server.service
      state: started
      enabled: yes

  - name: Wait port 4369 on listen
    wait_for:
      port: 4369
      timeout: 15

  - name: Add AWX Vhost
    rabbitmq_vhost:
      name: "awx"
      state: present
  
  - name: Remove RabbitMQ guest user
    rabbitmq_user:
      user: guest
      state: absent

  - name: Create the RabbitMQ Administrator User
    rabbitmq_user:
      user: "{{ rabbitmq_username }}"
      password: "{{ rabbitmq_password }}"
      vhost: "awx"
      configure_priv: .*
      read_priv: .*
      write_priv: .*
      state: present
      tags: administrator
    
  - name: Apply the HA policy to RabbitMQ cluster
    rabbitmq_policy:
      name: ha-all
      pattern: .*
      vhost: "awx"
      tags:
        ha-mode: all
        ha-sync-mode: automatic

  - name: Check status of firewall
    command: firewall-cmd --state
    register: status
    
  - name: Set firewall rules
    firewalld:
      port: "{{ item }}"
      permanent: yes
      state: enabled
    with_items:
      - 80/tcp
      - 4369/tcp
      - 5671/tcp
      - 5672/tcp      
      - 8883/tcp
      - 15672/tcp
      - 25672/tcp
      - 61613/tcp
      - 61614/tcp
    when: status.stdout == "running"
  
  - name: reload firewalld 
    command: firewall-cmd --reload
    when: status.stdout == "running"
